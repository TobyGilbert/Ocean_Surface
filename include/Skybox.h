/** @addtogroup OceanFFTStandAlone */
/*@{*/

#ifndef __SKYBOX_H_
#define __SKYBOX_H_
//----------------------------------------------------------------------------------------------------------------------
#define GLM_FORCE_RADIANS
#include <glm/glm.hpp>
#include <glm/gtc/type_ptr.hpp>
#include <string>
//----------------------------------------------------------------------------------------------------------------------
#include "Texture.h"
#include "ShaderProgram.h"
#include "ModelLoader.h"
//----------------------------------------------------------------------------------------------------------------------
/// @brief A class for creating a skybox object creating geometry and a cube map and managing its shader
/// @author Toby Gilbert
//----------------------------------------------------------------------------------------------------------------------
class Skybox {
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief ctor
    //----------------------------------------------------------------------------------------------------------------------
    Skybox();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief dtor
    //----------------------------------------------------------------------------------------------------------------------
    ~Skybox();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Initialise the skybox
    //----------------------------------------------------------------------------------------------------------------------
    void initSkybox();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Update varibale uniforms in the shader
    //----------------------------------------------------------------------------------------------------------------------
    void update();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Render function
    //----------------------------------------------------------------------------------------------------------------------
    void render();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Create the skybox shader
    //----------------------------------------------------------------------------------------------------------------------
    void createShader();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Load the matrices to the shader
    //----------------------------------------------------------------------------------------------------------------------
    void loadMatricesToShader(glm::mat4 _modelMatrix, glm::mat4 _viewMatrix, glm::mat4 _projectionMatrix);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Loads a cubemap into an active texture
    //----------------------------------------------------------------------------------------------------------------------
    void loadCubeMap(std::string _pathToFile, GLint _activeTexture);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Sets the position of the sun
    //----------------------------------------------------------------------------------------------------------------------
    void setSunPos(glm::vec3 _sunPos){m_sunPos = _sunPos;}
    //----------------------------------------------------------------------------------------------------------------------
private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Skybox model
    //----------------------------------------------------------------------------------------------------------------------
    ModelLoader *m_model;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Skybox shader program
    //----------------------------------------------------------------------------------------------------------------------
    ShaderProgram *m_shaderProgram;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Skybox vertex shader
    //----------------------------------------------------------------------------------------------------------------------
    Shader *m_vertShader;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Skybox fragment shader
    //----------------------------------------------------------------------------------------------------------------------
    Shader *m_fragShader;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief A uniform for moving the sun position in the shader
    //----------------------------------------------------------------------------------------------------------------------
    GLuint m_sunPosLoc;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief The position of the sun
    //----------------------------------------------------------------------------------------------------------------------
    glm::vec3 m_sunPos;
    //----------------------------------------------------------------------------------------------------------------------
};

#endif
/*@}*/
